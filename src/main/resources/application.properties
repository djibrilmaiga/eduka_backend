#######################################
#  CONFIGURATION SERVEUR
#######################################
server.port=8080
spring.application.name=eduka

#######################################
#  BASE DE DONNÉES MYSQL
#######################################
spring.datasource.url=jdbc:mysql://localhost:3306/eduka?useSSL=true&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#######################################
# Configuration Redis (pour OTP)
#######################################
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=60000

#######################################
# Configuration OTP
#######################################
otp.expiration.minutes=${OTP_EXPIRATION_MINUTES:5}
otp.max.attempts=${OTP_MAX_ATTEMPTS:3}

#######################################
#  SPRING SECURITY + JWT
#  Configuration JWT - VARIABLES SENSIBLES
#  IMPORTANT: Ces valeurs doivent être définies comme variables
#######################################
# Clé secrète JWT (à mettre en variable d'environnement en prod !)
jwt.secret=${JWT_SECRET:your-very-long-secret-key-here-minimum-256-bits}
jwt.access-token.expiration=${JWT_ACCESS_EXPIRATION:900000}
jwt.refresh-token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

#######################################
#  MAIL (ENVOI DE RAPPORTS / FACTURES)
#######################################
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=votre_email@gmail.com
spring.mail.password=mot_de_passe_app
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#######################################
#  SMS CONFIGURATION
#######################################
sms.provider=ORANGE_SMS
sms.use.free.provider=true
sms.orange.api.url=https://api.orange.com/smsmessaging/v1/outbound
sms.orange.access.token=
sms.twilio.account.sid=
sms.twilio.auth.token=
sms.twilio.phone.number=

#######################################
#  SMS (exemple avec Twilio) - DEPRECATED, utiliser sms.* ci-dessus
#######################################
twilio.account.sid=VOTRE_SID
twilio.auth.token=VOTRE_TOKEN
twilio.phone.number=+123456789

#######################################
#  UPLOAD DE FICHIERS (Documents & Reçus)
#######################################
file.upload-dir=uploads/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB

#######################################
#  CORS (Angular/Ionic Frontend)
#######################################
app.cors.allowed-origins=http://localhost:4200, http://localhost:8100
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type

#######################################
#  PAIEMENTS (Placeholders - API Mobile Money / PayPal / Wave)
#######################################
mobilemoney.orange.api.key=YOUR_ORANGE_API_KEY
mobilemoney.moov.api.key=YOUR_MOOV_API_KEY
wave.api.key=YOUR_WAVE_API_KEY
paypal.client.id=YOUR_PAYPAL_CLIENT_ID
paypal.client.secret=YOUR_PAYPAL_SECRET
stripe.api.key=YOUR_STRIPE_KEY   # si besoin

#######################################
#  INTERNATIONALISATION (Messages)
#######################################
spring.messages.basename=messages
spring.messages.encoding=UTF-8

#######################################
#  LOGGING
#######################################
logging.level.org.springframework=INFO
logging.level.com.yourproject=DEBUG
logging.level.com.groupe2_ionic.eduka=DEBUG
logging.level.org.springframework.beans=DEBUG

#######################################
#  APPLICATION CONFIGURATION
#######################################
app.name=EduKa
